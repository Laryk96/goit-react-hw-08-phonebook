{"version":3,"file":"static/js/560.f1224276.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/SignUp/SignUp.styled.jsx","components/logIn/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n  font-size: 16px;\n  line-height: 1.7;\n  font-weight: 500;\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  position: sticky;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  top: 100px;\n  width: 400px;\n  min-height: 250px;\n  max-height: 400px;\n  gap: 30px;\n  padding: 20px;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n\n  color: #fff;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 35px;\n  padding-left: 10px;\n  margin-bottom: 10px;\n  font-size: 16px;\n  border: none;\n  border-radius: 5px;\n  outline: yellow;\n  background-color: rgba(255, 255, 255, 0.4);\n\n  &:focus,\n  &:hover {\n    border: 2px solid orange;\n  }\n\n  &:placeholder-shown {\n    color: black;\n    font-size: 14px;\n    font-weight: 700;\n  }\n`;\n\nconst Button = styled.button`\n  display: block;\n  margin-top: 10px;\n  width: 100%;\n  padding: 8px 30px;\n  background-image: linear-gradient(\n    to right,\n    #fdfc47 0%,\n    #24fe41 51%,\n    #fdfc47 100%\n  );\n\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: #212121;\n  box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);\n  border-radius: 10px;\n\n  font-size: 18px;\n\n  &:hover {\n    background-position: right center; /* change the direction of the change here */\n    color: #fff;\n    text-decoration: none;\n  }\n\n  &:disabled {\n    background-color: rgba(255, 255, 255, 0.4);\n    background-image: none;\n    box-shadow: none;\n    border: none;\n  }\n`;\nexport { Label, Form, Input, Button };\n","import { Button, TextField, Box } from '@mui/material';\n\nimport { styled } from '@mui/material/styles';\n\nconst StyledInput = styled(TextField)({\n  width: '100%',\n  height: '50px',\n\n  '& label': {\n    color: 'rgba(255,255,255,0.6)',\n    fontSize: 14,\n  },\n\n  '& label.Mui-focused': {\n    color: '#fff',\n    fontSize: 16,\n  },\n\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#fff',\n  },\n\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'rgba(255,255,255,0.6)',\n    },\n\n    '&:hover fieldset': {\n      borderColor: '#fff',\n    },\n\n    '&.Mui-focused fieldset': {\n      borderColor: 'yellow',\n    },\n  },\n\n  '& .MuiInputBase-input': {\n    padding: '10px 12px',\n    fontSize: 16,\n    color: '#fff',\n  },\n});\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n\n  borderRadius: '30px',\n  fontSize: 16,\n  textTransform: 'uppercase',\n  boxShadow: '0 0 20px rgba(255,255,255,0.5)',\n  transition: '0.5s',\n  backgroundSize: '200% auto',\n\n  backgroundImage:\n    'linear-gradient(to right, #000000 0%, #53346D  51%, #000000  100%)',\n\n  '&:hover': {\n    backgroundPosition: 'right center',\n    color: '#fff',\n    textDecoration: 'none',\n    backgroundColor: '',\n  },\n  '&:active': {\n    boxShadow: 'none',\n    backgroundColor: '#0062cc',\n    borderColor: '#005cbf',\n  },\n  '&:focus': {\n    boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n  },\n});\n//\n\nconst Form = styled(Box)`\n  width: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px 20px;\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n`;\n\nconst Container = styled(Box)`\n  display: flex;\n  justify-content: center;\n`;\nexport { StyledButton, StyledInput, Form, Container };\n","import { Tooltip, Typography } from '@mui/material';\nimport {\n  Form,\n  StyledButton,\n  StyledInput,\n} from 'components/SignUp/SignUp.styled';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\n\nimport { login } from 'redux/auth/operation';\nimport { Label } from 'components/ContactForm/ContactForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Email must be a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(7, 'Password is too short - should be 8 chars minimum.'),\n  // .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nconst LogIn = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(login(values));\n      resetForm();\n    },\n    validationSchema: schema,\n  });\n\n  const isDisabled = !(formik.isValid && formik.dirty);\n  return (\n    <Form\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={formik.handleSubmit}\n    >\n      <Typography\n        variant=\"h3\"\n        sx={{\n          marginBottom: '30px',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n        }}\n      >\n        Log in\n      </Typography>\n\n      <Tooltip title={formik.errors.email}>\n        <Label>\n          <StyledInput\n            required\n            label=\"Email\"\n            type=\"email\"\n            variant=\"standard\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          {formik.errors.email && formik.touched.email ? (\n            <>{formik.errors.email}</>\n          ) : null}\n        </Label>\n      </Tooltip>\n\n      <Tooltip title={formik.errors.password}>\n        <Label>\n          <StyledInput\n            required\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"standard\"\n            sx={{ mb: '10px' }}\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          {formik.errors.password && formik.touched.password ? (\n            <span>{formik.errors.password}</span>\n          ) : null}\n        </Label>\n      </Tooltip>\n\n      <StyledButton type=\"submit\" variant=\"contained\" disabled={isDisabled}>\n        Login\n      </StyledButton>\n    </Form>\n  );\n};\n\nexport default LogIn;\n","import LogIn from 'components/logIn/Login';\nimport { Container } from 'components/SignUp/SignUp.styled';\n\nconst LoginPage = () => {\n  return (\n    <section>\n      <Container component=\"div\">\n        <LogIn />\n      </Container>\n    </section>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Label","styled","Form","Input","Button","StyledInput","TextField","width","height","color","fontSize","borderBottomColor","borderColor","padding","StyledButton","borderRadius","textTransform","boxShadow","transition","backgroundSize","backgroundImage","backgroundPosition","textDecoration","backgroundColor","Box","Container","initialValues","email","password","schema","yup","shape","required","min","dispatch","useDispatch","formik","useFormik","onSubmit","values","resetForm","login","validationSchema","isDisabled","isValid","dirty","component","noValidate","autoComplete","handleSubmit","Typography","variant","sx","marginBottom","textAlign","Tooltip","title","errors","label","type","name","onChange","handleChange","value","touched","mb","disabled"],"sourceRoot":""}